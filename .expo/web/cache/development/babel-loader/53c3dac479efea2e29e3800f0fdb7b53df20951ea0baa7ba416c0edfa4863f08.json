{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, React, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { getPopularMovies, getUpcomingMovies } from \"../API/services\";\nimport { SliderBox } from 'react-native-image-slider-box';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar dimensions = Dimensions.get('screen');\nvar HomePage = function HomePage() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    moviesImages = _useState2[0],\n    setMoviesImages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    popularmovies = _useState4[0],\n    setPopularmovies = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  useEffect(function () {\n    getPopularMovies().then(function (movies) {\n      setPopularmovies(movies);\n    }).catch(function (err) {\n      setError(error);\n    });\n    getUpcomingMovies().then(function (movies) {\n      var moviesImagesArray = [];\n      movies.forEach(function (movie) {\n        moviesImagesArray.push('https://image.tmdb.org/t/p/w500' + movie.poster_path);\n      });\n      setMoviesImages(moviesImagesArray);\n    }).catch(function (err) {\n      setError(error);\n    });\n  }, []);\n  return _jsxs(react.Fragment, {\n    children: [_jsx(View, {\n      style: styles.sliderContainer,\n      children: _jsx(SliderBox, {\n        images: moviesImages,\n        dotStyle: styles.sliderstyle,\n        sliderBoxHeight: dimensions.height / 1.5,\n        autoplay: true,\n        circleLoop: true\n      })\n    }), _jsx(\"view\", {\n      style: styles.carousel\n    }), _jsx(FlatList, {\n      data: popularmovies,\n      horizontal: true,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(Text, {\n          children: item.title\n        });\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  sliderContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  sliderstyle: {\n    height: 0\n  },\n  carousel: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default HomePage;","map":{"version":3,"names":["useState","React","useEffect","Text","View","Dimensions","FlatList","getPopularMovies","getUpcomingMovies","SliderBox","jsx","_jsx","jsxs","_jsxs","dimensions","get","HomePage","_useState","_useState2","_slicedToArray","moviesImages","setMoviesImages","_useState3","_useState4","popularmovies","setPopularmovies","_useState5","_useState6","error","setError","then","movies","catch","err","moviesImagesArray","forEach","movie","push","poster_path","react","Fragment","children","style","styles","sliderContainer","images","dotStyle","sliderstyle","sliderBoxHeight","height","autoplay","circleLoop","carousel","data","horizontal","renderItem","_ref","item","title","StyleSheet","create","flex","justifyContent","alignItems"],"sources":["/home/lokesh/Desktop/MoviesApp/MoviesApp/screens/HomePage.js"],"sourcesContent":["// import {useState,React,useEffect} from 'react';\n// import {Text, View} from 'react-native';\n// import { getPopularMovies } from '../API/services';\n// import { SliderBox } from 'react-native-image-slider-box';\n\n// const HomePage = () => {\n//     const [movie,setMovie] = useState('');\n//   const [error,setError] = useState(false);\n//   useEffect(() => {\n//     getPopularMovies().then(movies => {\n//       setMovie(movies[0]);\n//     }).catch(err =>{\n//       setError(err);\n\n//     });\n//   },[]);\n//     return (\n//         <View\n//       style={{\n//         flex: 1,\n//         justifyContent: 'center',\n//         alignItems: 'center',\n//       }}>\n//       <Text>Movie Name:{movie.original_title}</Text>\n//       <Text>Language:{movie.original_language}</Text>\n//       <Text>Release:{movie.release_date}</Text>\n//       {error && <Text style={{color : 'red'}}>Error in the Server</Text>}\n//     </View>\n        \n//     );\n// }\n\n// export default HomePage;\n\n\n\n// import {useState,React,useEffect} from 'react';\n// import {Text, View, Dimensions} from 'react-native';\n// import { getPopularMovies , getUpcomingMovies} from '../API/services';\n// import { SliderBox } from 'react-native-image-slider-box';\n\n// const dimensions = Dimensions.get('screen');\n// const HomePage = () => {\n//     const [moviesImages,setMoviesImages] = useState('');\n//   const [error,setError] = useState(false);\n//   useEffect(() => {\n//     getPopularMovies().then(movies => {\n//     }).catch(err =>{\n//       setError(error);\n\n//     });\n//     getUpcomingMovies().then(movies => {\n//         const moviesImagesArray = [];\n//         movies.forEach(movie => {\n//             (moviesImagesArray.push('https://image.tmdb.org/t/p/w500'+movie.poster_path))\n//         });\n//         setMoviesImages(moviesImagesArray);\n//       }).catch(err =>{\n//         setError(error );\n  \n//       });\n//   },[]);\n//     return (\n//       <View\n//       style={styles.sliderContainer}>\n//         <SliderBox images={moviesImages}  dotStyle={styles.sliderstyle} sliderBoxHeight={dimensions.height / 1.5} autoplay ={true} circleLoop={true}/>\n     \n//         </View>\n    \n        \n//     );\n// }\n\n\n// const styles = StyleSheet.create({\n//     sliderContainer : {\n//         flex: 1,\n//         justifyContent: 'center',\n//         alignItems: 'center'\n//     },\n//     sliderstyle:{\n//         height: 0\n//     },\n// });\n\n// export default HomePage;\n\n\n\n\nimport {useState,React,useEffect} from 'react';\nimport {Text, View, Dimensions, FlatList} from 'react-native';\nimport { getPopularMovies , getUpcomingMovies} from '../API/services';\nimport { SliderBox } from 'react-native-image-slider-box';\n\n\nconst dimensions = Dimensions.get('screen');\nconst HomePage = () => {\n  const [moviesImages,setMoviesImages] = useState('');\n  const [popularmovies,setPopularmovies] = useState('');\n  const [error,setError] = useState(false);\n  useEffect(() => {\n    getPopularMovies().then(movies => {\n      setPopularmovies(movies)\n    }).catch(err =>{\n      setError(error);\n\n    });\n    getUpcomingMovies().then(movies => {\n        const moviesImagesArray = [];\n        movies.forEach(movie => {\n            (moviesImagesArray.push('https://image.tmdb.org/t/p/w500'+movie.poster_path))\n        });\n        setMoviesImages(moviesImagesArray);\n      }).catch(err =>{\n        setError(error );\n  \n      });\n  },[]);\n    return (\n      <react.Fragment>\n      <View\n      style={styles.sliderContainer}>\n        <SliderBox images={moviesImages}  dotStyle={styles.sliderstyle} sliderBoxHeight={dimensions.height / 1.5} autoplay ={true} circleLoop={true}/>\n      </View>\n      <view style={styles.carousel}></view>\n      <FlatList data ={ popularmovies} horizontal={true} renderItem={({item}) => <Text>{item.title}</Text>}></FlatList>\n      </react.Fragment>\n    \n        \n    );\n}\n\n\nconst styles = StyleSheet.create({\n    sliderContainer : {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    sliderstyle:{\n        height: 0\n    },\n    carousel :{\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n});\n\nexport default HomePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}