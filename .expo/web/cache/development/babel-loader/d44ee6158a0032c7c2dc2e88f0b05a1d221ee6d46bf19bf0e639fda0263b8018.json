{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, React, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { getPopularMovies, getUpcomingMovies } from \"../API/services\";\nimport { SliderBox } from 'react-native-image-slider-box';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar dimensions = Dimensions.get('screen');\nvar HomePage = function HomePage() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    moviesImages = _useState2[0],\n    setMoviesImages = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  useEffect(function () {\n    getPopularMovies().then(function (movies) {}).catch(function (err) {\n      setError(error);\n    });\n    getUpcomingMovies().then(function (movies) {\n      var moviesImagesArray = [];\n      movies.forEach(function (movie) {\n        moviesImagesArray.push('https://image.tmdb.org/t/p/w500' + movie.poster_path);\n      });\n      setMoviesImages(moviesImagesArray);\n    }).catch(function (err) {\n      setError(error);\n    });\n  }, []);\n  return _jsx(View, {\n    style: styles.sliderContainer,\n    children: _jsx(SliderBox, {\n      images: moviesImages,\n      dotStyle: styles.sliderstyle,\n      sliderBoxHeight: dimensions.height / 1.5,\n      autoplay: true,\n      circleLoop: true\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  sliderContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  sliderstyle: {\n    height: 0\n  }\n});\nexport default HomePage;","map":{"version":3,"names":["useState","React","useEffect","View","Dimensions","getPopularMovies","getUpcomingMovies","SliderBox","jsx","_jsx","dimensions","get","HomePage","_useState","_useState2","_slicedToArray","moviesImages","setMoviesImages","_useState3","_useState4","error","setError","then","movies","catch","err","moviesImagesArray","forEach","movie","push","poster_path","style","styles","sliderContainer","children","images","dotStyle","sliderstyle","sliderBoxHeight","height","autoplay","circleLoop","StyleSheet","create","flex","justifyContent","alignItems"],"sources":["/home/lokesh/Desktop/MoviesApp/MoviesApp/screens/HomePage.js"],"sourcesContent":["// import {useState,React,useEffect} from 'react';\n// import {Text, View} from 'react-native';\n// import { getPopularMovies } from '../API/services';\n// // import { SliderBox } from 'react-native-image-slider-box';\n\n// const HomePage = () => {\n//     const [movie,setMovie] = useState('');\n//   const [error,setError] = useState(false);\n//   useEffect(() => {\n//     getPopularMovies().then(movies => {\n//       setMovie(movies[0]);\n//     }).catch(err =>{\n//       setError(err);\n\n//     });\n//   },[]);\n//     return (\n//         <View\n//       style={{\n//         flex: 1,\n//         justifyContent: 'center',\n//         alignItems: 'center',\n//       }}>\n//       <Text>Movie Name:{movie.original_title}</Text>\n//       <Text>Language:{movie.original_language}</Text>\n//       <Text>Release:{movie.release_date}</Text>\n//       {error && <Text style={{color : 'red'}}>Error in the Server</Text>}\n//     </View>\n        \n//     );\n// }\n\n// export default HomePage;\n\n\n\nimport {useState,React,useEffect} from 'react';\nimport { View, Dimensions} from 'react-native';\nimport { getPopularMovies , getUpcomingMovies} from '../API/services';\nimport { SliderBox } from 'react-native-image-slider-box';\n\nconst dimensions = Dimensions.get('screen');\nconst HomePage = () => {\n    const [moviesImages,setMoviesImages] = useState('');\n  const [error,setError] = useState(false);\n  useEffect(() => {\n    getPopularMovies().then(movies => {\n    }).catch(err =>{\n      setError(error);\n\n    });\n    getUpcomingMovies().then(movies => {\n        const moviesImagesArray = [];\n        movies.forEach(movie => {\n            (moviesImagesArray.push('https://image.tmdb.org/t/p/w500'+movie.poster_path))\n        });\n        setMoviesImages(moviesImagesArray);\n      }).catch(err =>{\n        setError(error );\n  \n      });\n  },[]);\n    return (\n      <View\n      style={styles.sliderContainer}>\n        <SliderBox images={moviesImages}  dotStyle={styles.sliderstyle} sliderBoxHeight={dimensions.height / 1.5} autoplay ={true} circleLoop={true}/>\n     \n        </View>\n    \n        \n    );\n}\n\n\nconst styles = StyleSheet.create({\n    sliderContainer : {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    sliderstyle:{\n        height: 0\n    },\n});\n\nexport default HomePage;\n\n\n\n\n// import {useState,React,useEffect} from 'react';\n// import {Text, View, Dimensions, FlatList} from 'react-native';\n// import { getPopularMovies , getUpcomingMovies} from '../API/services';\n// import { SliderBox } from 'react-native-image-slider-box';\n\n\n// const dimensions = Dimensions.get('screen');\n// const HomePage = () => {\n//   const [moviesImages,setMoviesImages] = useState('');\n//   const [popularmovies,setPopularmovies] = useState('');\n//   const [error,setError] = useState(false);\n//   useEffect(() => {\n//     getPopularMovies().then(movies => {\n//       setPopularmovies(movies)\n//     }).catch(err =>{\n//       setError(error);\n\n//     });\n//     getUpcomingMovies().then(movies => {\n//         const moviesImagesArray = [];\n//         movies.forEach(movie => {\n//             (moviesImagesArray.push('https://image.tmdb.org/t/p/w500'+movie.poster_path))\n//         });\n//         setMoviesImages(moviesImagesArray);\n//       }).catch(err =>{\n//         setError(error );\n  \n//       });\n//   },[]);\n//     return (\n//       <react.Fragment>\n//       <View\n//       style={styles.sliderContainer}>\n//         <SliderBox images={moviesImages}  dotStyle={styles.sliderstyle} sliderBoxHeight={dimensions.height / 1.5} autoplay ={true} circleLoop={true}/>\n//       </View>\n//       <view style={styles.carousel}></view>\n//       <FlatList data ={ popularmovies} horizontal={true} renderItem={({item}) => <Text>{item.title}</Text>}></FlatList>\n//       </react.Fragment>\n    \n        \n//     );\n// }\n\n\n// const styles = StyleSheet.create({\n//     sliderContainer : {\n//         flex: 1,\n//         justifyContent: 'center',\n//         alignItems: 'center'\n//     },\n//     sliderstyle:{\n//         height: 0\n//     },\n//     carousel :{\n//       flex: 1,\n//       justifyContent: 'center',\n//       alignItems: 'center'\n//     }\n// });\n\n// export default HomePage;"],"mappings":";AAoCA,SAAQA,QAAQ,EAACC,KAAK,EAACC,SAAS,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE/C,SAASC,gBAAgB,EAAGC,iBAAiB;AAC7C,SAASC,SAAS,QAAQ,+BAA+B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE1D,IAAMC,UAAU,GAAGN,UAAU,CAACO,GAAG,CAAC,QAAQ,CAAC;AAC3C,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EACnB,IAAAC,SAAA,GAAuCb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,YAAY,GAAAF,UAAA;IAACG,eAAe,GAAAH,UAAA;EACrC,IAAAI,UAAA,GAAyBlB,QAAQ,CAAC,KAAK,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjCE,KAAK,GAAAD,UAAA;IAACE,QAAQ,GAAAF,UAAA;EACrBjB,SAAS,CAAC,YAAM;IACdG,gBAAgB,EAAE,CAACiB,IAAI,CAAC,UAAAC,MAAM,EAAI,CAClC,CAAC,CAAC,CAACC,KAAK,CAAC,UAAAC,GAAG,EAAG;MACbJ,QAAQ,CAACD,KAAK,CAAC;IAEjB,CAAC,CAAC;IACFd,iBAAiB,EAAE,CAACgB,IAAI,CAAC,UAAAC,MAAM,EAAI;MAC/B,IAAMG,iBAAiB,GAAG,EAAE;MAC5BH,MAAM,CAACI,OAAO,CAAC,UAAAC,KAAK,EAAI;QACnBF,iBAAiB,CAACG,IAAI,CAAC,iCAAiC,GAACD,KAAK,CAACE,WAAW,CAAC;MAChF,CAAC,CAAC;MACFb,eAAe,CAACS,iBAAiB,CAAC;IACpC,CAAC,CAAC,CAACF,KAAK,CAAC,UAAAC,GAAG,EAAG;MACbJ,QAAQ,CAACD,KAAK,CAAE;IAElB,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EACH,OACEX,IAAA,CAACN,IAAI;IACL4B,KAAK,EAAEC,MAAM,CAACC,eAAgB;IAAAC,QAAA,EAC5BzB,IAAA,CAACF,SAAS;MAAC4B,MAAM,EAAEnB,YAAa;MAAEoB,QAAQ,EAAEJ,MAAM,CAACK,WAAY;MAACC,eAAe,EAAE5B,UAAU,CAAC6B,MAAM,GAAG,GAAI;MAACC,QAAQ,EAAG,IAAK;MAACC,UAAU,EAAE;IAAK;EAAE,EAEvI;AAIf,CAAC;AAGD,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAC7BV,eAAe,EAAG;IACdW,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAChB,CAAC;EACDT,WAAW,EAAC;IACRE,MAAM,EAAE;EACZ;AACJ,CAAC,CAAC;AAEF,eAAe3B,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}