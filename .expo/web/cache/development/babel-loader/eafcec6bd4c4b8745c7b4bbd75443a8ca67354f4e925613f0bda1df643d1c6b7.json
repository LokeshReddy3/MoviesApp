{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, React, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { getPopularMovies } from \"../API/services\";\nimport { SliderBox } from 'react-native-image-slider-box';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar HomePage = function HomePage() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    movie = _useState2[0],\n    setMovie = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  useEffect(function () {\n    getPopularMovies().then(function (movies) {\n      setMovie(movies[0]);\n    }).catch(function (err) {\n      setError(err);\n    });\n    getUpcomingMovies().then(function (movies) {\n      var moviesImagesArray = [];\n      movies.forEach(function (movie) {\n        moviesImagesArray.push('https://image.tmdb.org/t/p/w500' + movie.poster_path);\n      });\n      setMoviesImages(moviesImagesArray);\n    }).catch(function (err) {\n      setError(error);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [_jsxs(Text, {\n      children: [\"Movie Name:\", movie.original_title]\n    }), _jsxs(Text, {\n      children: [\"Language:\", movie.original_language]\n    }), _jsxs(Text, {\n      children: [\"Release:\", movie.release_date]\n    }), error && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"Error in the Server\"\n    }), _jsx(SliderBox, {\n      images: moviesImages,\n      dotStyle: styles.sliderstyle,\n      sliderBoxHeight: dimensions.height / 1.5,\n      autoplay: true,\n      circleLoop: true\n    })]\n  });\n};\nexport default HomePage;","map":{"version":3,"names":["useState","React","useEffect","Text","View","getPopularMovies","SliderBox","jsxs","_jsxs","jsx","_jsx","HomePage","_useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","error","setError","then","movies","catch","err","getUpcomingMovies","moviesImagesArray","forEach","push","poster_path","setMoviesImages","style","flex","justifyContent","alignItems","children","original_title","original_language","release_date","color","images","moviesImages","dotStyle","styles","sliderstyle","sliderBoxHeight","dimensions","height","autoplay","circleLoop"],"sources":["/home/lokesh/Desktop/MoviesApp/MoviesApp/screens/HomePage.js"],"sourcesContent":["import {useState,React,useEffect} from 'react';\nimport {Text, View} from 'react-native';\nimport { getPopularMovies } from '../API/services';\nimport { SliderBox } from 'react-native-image-slider-box';\n\nconst HomePage = () => {\n    const [movie,setMovie] = useState('');\n  const [error,setError] = useState(false);\n  useEffect(() => {\n    getPopularMovies().then(movies => {\n      setMovie(movies[0]);\n    }).catch(err =>{\n      setError(err);\n\n    });\n    getUpcomingMovies().then(movies => {\n      const moviesImagesArray = [];\n      movies.forEach(movie => {\n          (moviesImagesArray.push('https://image.tmdb.org/t/p/w500'+movie.poster_path))\n      });\n      setMoviesImages(moviesImagesArray);\n    }).catch(err =>{\n      setError(error );\n\n    });\n  },[]);\n    return (\n        <View\n      style={{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}>\n      <Text>Movie Name:{movie.original_title}</Text>\n      <Text>Language:{movie.original_language}</Text>\n      <Text>Release:{movie.release_date}</Text>\n      {error && <Text style={{color : 'red'}}>Error in the Server</Text>}\n      <SliderBox images={moviesImages}  dotStyle={styles.sliderstyle} sliderBoxHeight={dimensions.height / 1.5} autoplay ={true} circleLoop={true}/>\n    </View>\n        \n    );\n}\n\nexport default HomePage;\n\n\n\n// import {useState,React,useEffect} from 'react';\n// import { View, Dimensions} from 'react-native';\n// import { getPopularMovies , getUpcomingMovies} from '../API/services';\n// import { SliderBox } from 'react-native-image-slider-box';\n\n// const dimensions = Dimensions.get('screen');\n// const HomePage = () => {\n//     const [moviesImages,setMoviesImages] = useState('');\n//   const [error,setError] = useState(false);\n//   useEffect(() => {\n//     getPopularMovies().then(movies => {\n//     }).catch(err =>{\n//       setError(error);\n\n//     });\n//     getUpcomingMovies().then(movies => {\n//         const moviesImagesArray = [];\n//         movies.forEach(movie => {\n//             (moviesImagesArray.push('https://image.tmdb.org/t/p/w500'+movie.poster_path))\n//         });\n//         setMoviesImages(moviesImagesArray);\n//       }).catch(err =>{\n//         setError(error );\n  \n//       });\n//   },[]);\n//     return (\n//       <View\n//       style={styles.sliderContainer}>\n//         <SliderBox images={moviesImages}  dotStyle={styles.sliderstyle} sliderBoxHeight={dimensions.height / 1.5} autoplay ={true} circleLoop={true}/>\n     \n//         </View>\n    \n        \n//     );\n// }\n\n\n// const styles = StyleSheet.create({\n//     sliderContainer : {\n//         flex: 1,\n//         justifyContent: 'center',\n//         alignItems: 'center'\n//     },\n//     sliderstyle:{\n//         height: 0\n//     },\n// });\n\n// export default HomePage;\n\n\n\n\n// import {useState,React,useEffect} from 'react';\n// import {Text, View, Dimensions, FlatList} from 'react-native';\n// import { getPopularMovies , getUpcomingMovies} from '../API/services';\n// import { SliderBox } from 'react-native-image-slider-box';\n\n\n// const dimensions = Dimensions.get('screen');\n// const HomePage = () => {\n//   const [moviesImages,setMoviesImages] = useState('');\n//   const [popularmovies,setPopularmovies] = useState('');\n//   const [error,setError] = useState(false);\n//   useEffect(() => {\n//     getPopularMovies().then(movies => {\n//       setPopularmovies(movies)\n//     }).catch(err =>{\n//       setError(error);\n\n//     });\n//     getUpcomingMovies().then(movies => {\n//         const moviesImagesArray = [];\n//         movies.forEach(movie => {\n//             (moviesImagesArray.push('https://image.tmdb.org/t/p/w500'+movie.poster_path))\n//         });\n//         setMoviesImages(moviesImagesArray);\n//       }).catch(err =>{\n//         setError(error );\n  \n//       });\n//   },[]);\n//     return (\n//       <react.Fragment>\n//       <View\n//       style={styles.sliderContainer}>\n//         <SliderBox images={moviesImages}  dotStyle={styles.sliderstyle} sliderBoxHeight={dimensions.height / 1.5} autoplay ={true} circleLoop={true}/>\n//       </View>\n//       <view style={styles.carousel}></view>\n//       <FlatList data ={ popularmovies} horizontal={true} renderItem={({item}) => <Text>{item.title}</Text>}></FlatList>\n//       </react.Fragment>\n    \n        \n//     );\n// }\n\n\n// const styles = StyleSheet.create({\n//     sliderContainer : {\n//         flex: 1,\n//         justifyContent: 'center',\n//         alignItems: 'center'\n//     },\n//     sliderstyle:{\n//         height: 0\n//     },\n//     carousel :{\n//       flex: 1,\n//       justifyContent: 'center',\n//       alignItems: 'center'\n//     }\n// });\n\n// export default HomePage;"],"mappings":";AAAA,SAAQA,QAAQ,EAACC,KAAK,EAACC,SAAS,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE/C,SAASC,gBAAgB;AACzB,SAASC,SAAS,QAAQ,+BAA+B;AAAC,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAE1D,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EACnB,IAAAC,SAAA,GAAyBZ,QAAQ,CAAC,EAAE,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9BG,KAAK,GAAAF,UAAA;IAACG,QAAQ,GAAAH,UAAA;EACvB,IAAAI,UAAA,GAAyBjB,QAAQ,CAAC,KAAK,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjCE,KAAK,GAAAD,UAAA;IAACE,QAAQ,GAAAF,UAAA;EACrBhB,SAAS,CAAC,YAAM;IACdG,gBAAgB,EAAE,CAACgB,IAAI,CAAC,UAAAC,MAAM,EAAI;MAChCN,QAAQ,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CAACC,KAAK,CAAC,UAAAC,GAAG,EAAG;MACbJ,QAAQ,CAACI,GAAG,CAAC;IAEf,CAAC,CAAC;IACFC,iBAAiB,EAAE,CAACJ,IAAI,CAAC,UAAAC,MAAM,EAAI;MACjC,IAAMI,iBAAiB,GAAG,EAAE;MAC5BJ,MAAM,CAACK,OAAO,CAAC,UAAAZ,KAAK,EAAI;QACnBW,iBAAiB,CAACE,IAAI,CAAC,iCAAiC,GAACb,KAAK,CAACc,WAAW,CAAC;MAChF,CAAC,CAAC;MACFC,eAAe,CAACJ,iBAAiB,CAAC;IACpC,CAAC,CAAC,CAACH,KAAK,CAAC,UAAAC,GAAG,EAAG;MACbJ,QAAQ,CAACD,KAAK,CAAE;IAElB,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EACH,OACIX,KAAA,CAACJ,IAAI;IACP2B,KAAK,EAAE;MACLC,IAAI,EAAE,CAAC;MACPC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,GACF3B,KAAA,CAACL,IAAI;MAAAgC,QAAA,GAAC,aAAW,EAACpB,KAAK,CAACqB,cAAc;IAAA,EAAQ,EAC9C5B,KAAA,CAACL,IAAI;MAAAgC,QAAA,GAAC,WAAS,EAACpB,KAAK,CAACsB,iBAAiB;IAAA,EAAQ,EAC/C7B,KAAA,CAACL,IAAI;MAAAgC,QAAA,GAAC,UAAQ,EAACpB,KAAK,CAACuB,YAAY;IAAA,EAAQ,EACxCnB,KAAK,IAAIT,IAAA,CAACP,IAAI;MAAC4B,KAAK,EAAE;QAACQ,KAAK,EAAG;MAAK,CAAE;MAAAJ,QAAA,EAAC;IAAmB,EAAO,EAClEzB,IAAA,CAACJ,SAAS;MAACkC,MAAM,EAAEC,YAAa;MAAEC,QAAQ,EAAEC,MAAM,CAACC,WAAY;MAACC,eAAe,EAAEC,UAAU,CAACC,MAAM,GAAG,GAAI;MAACC,QAAQ,EAAG,IAAK;MAACC,UAAU,EAAE;IAAK,EAAE;EAAA,EACzI;AAGX,CAAC;AAED,eAAetC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}